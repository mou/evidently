name: Publish on PyPI and Docker Hub

on:
  push:
    tags:
      - v**

jobs:
  check:
    name: Verifying preconditions for releasing Evidently
    runs-on: ubuntu-latest

    steps:
      - name: Checking out sources
        uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Check _version.py was updated
        env:
          PYTHONPATH: ./src
        run: |-
          VERSION_TO_RELEASE=v$(python -c "from evidently import __version__; print(__version__)" || cat ../src/evidently/_version.py | grep "version_info = " | grep -Po "\d+" |  tr '\n' . | cut -c 1-5)
          if [ "${{ github.ref_name }}" != "$VERSION_TO_RELEASE" ]; then
            echo "Release triggered for tag ${{ github.ref_name }} but version.py contains $VERSION_TO_RELEASE"
            exit 1
          fi


  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs:
      - check

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: pip install -r requirements.min.txt
    - name: Install wheel
      run: pip install wheel
    - name: Build a binary wheel and a source tarball
      run: python setup.py sdist bdist_wheel
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
 
  publish_to_pypi:
    name: Publish Python distributions to PyPI and TestPyPI
    runs-on: [ ubuntu-latest ]
    needs:
      - build

    permissions:
      id-token: write  

    environment:
      name: Release
      url: https://test.pypi.org/p/evidently

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  build_and_pub_docker:
    runs-on: [ ubuntu-latest ]
    needs:
      - build

    environment:
      name: Release

    steps:
      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: setup builder
        run: docker buildx create --name mybuilder --bootstrap --use
      - name: Build and release image
        run: cd docker && make release
